// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PumpManagement.Data;

#nullable disable

namespace PumpManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250324153423_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PumpManagement.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("PumpManagement.Models.Motor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("CurrentA")
                        .HasColumnType("double precision");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PowerKw")
                        .HasColumnType("double precision");

                    b.Property<decimal>("PriceRub")
                        .HasColumnType("numeric");

                    b.Property<int>("SpeedRpm")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Motors");
                });

            modelBuilder.Entity("PumpManagement.Models.Pump", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("HousingMaterialId")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<int?>("ImpellerMaterialId")
                        .HasColumnType("integer");

                    b.Property<double>("LiquidTemperatureC")
                        .HasColumnType("double precision");

                    b.Property<double>("MaxPressureBar")
                        .HasColumnType("double precision");

                    b.Property<int?>("MotorId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PriceRub")
                        .HasColumnType("numeric");

                    b.Property<double>("WeightKg")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("HousingMaterialId");

                    b.HasIndex("ImpellerMaterialId");

                    b.HasIndex("MotorId");

                    b.ToTable("Pumps");
                });

            modelBuilder.Entity("PumpManagement.Models.Pump", b =>
                {
                    b.HasOne("PumpManagement.Models.Material", "HousingMaterial")
                        .WithMany("HousingPumps")
                        .HasForeignKey("HousingMaterialId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PumpManagement.Models.Material", "ImpellerMaterial")
                        .WithMany("ImpellerPumps")
                        .HasForeignKey("ImpellerMaterialId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("PumpManagement.Models.Motor", "Motor")
                        .WithMany("Pumps")
                        .HasForeignKey("MotorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("HousingMaterial");

                    b.Navigation("ImpellerMaterial");

                    b.Navigation("Motor");
                });

            modelBuilder.Entity("PumpManagement.Models.Material", b =>
                {
                    b.Navigation("HousingPumps");

                    b.Navigation("ImpellerPumps");
                });

            modelBuilder.Entity("PumpManagement.Models.Motor", b =>
                {
                    b.Navigation("Pumps");
                });
#pragma warning restore 612, 618
        }
    }
}
